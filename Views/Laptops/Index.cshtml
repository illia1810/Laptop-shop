@model IEnumerable<LaptopProject.Laptop>
@using System.Security.Claims;
@{
    ViewData["Title"] = "Index";
}
<head>
    <style>
        body {
            background-image: url(https://images.unsplash.com/photo-1582056615449-5dcb2332b3b2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80);
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
        }

        table {
            background-color: rgba(255, 250, 253, 0.70);
        }

        .navbar-default1 {
            background-color: #749489;
            border-color: black;
        }
    </style>
</head>

<h1>НОУТБУКИ</h1>
@if (User.Identity.IsAuthenticated)
{
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var customUserClaim = claimsIdentity != null ? claimsIdentity.Claims.FirstOrDefault(x => x.Type == "customType") : null;
    var customTypeValue = customUserClaim != null ? customUserClaim.Value : User.Identity.Name;
    var roleOfUser = claimsIdentity != null ? claimsIdentity.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role).Value : "User";
    @if (roleOfUser == "admin")
    {
        <a asp-action="Create">ДОДАТИ МОДЕЛЬ</a>
        }
    }
        <div>
            <h3>Select Excel-file for download</h3>
            @using (Html.BeginForm("Import", "Laptops", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm-excel" }))
            {
                <div>
                    Download Excel-file:
                    <input type="file" name="fileExcel" id="fileExcel" />
                    <div>
                        <input type="submit" value="Download" />
                    </div>
                </div>
            }
        </div>
        <p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Color)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Country)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Cpu)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Model)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Color.Color1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Country.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cpu.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Model.Model)
                            </td>
                            <td>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
                                    var customUserClaim = claimsIdentity != null ? claimsIdentity.Claims.FirstOrDefault(x => x.Type == "customType") : null;
                                    var customTypeValue = customUserClaim != null ? customUserClaim.Value : User.Identity.Name;
                                    var roleOfUser = claimsIdentity != null ? claimsIdentity.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role).Value : "User";
                                    @if (roleOfUser == "admin")
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id">Змінити</a> 
                                         <a asp-action = "Delete" asp-route-id = "@item.Id" > Видалити </a >
                                       }}
                                @Html.ActionLink("Характеристики", "Feature", new { l_id = item.Id })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </p>